/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SyntaxHighlighter {
        /**
          * The content to show in the syntax highlighter element
         */
        "content": string;
        /**
          * The text inside the "copy to clipboard" button
          * @remark This is primarily for if you want to provide i18n with your syntax highlighted component
          * @example "Kopieer naar klembord"
          * @default "Copy to clipboard"
         */
        "copyButtonLabel": string;
        /**
          * The language to highlight for
          * @default html
         */
        "language": string;
        /**
          * The theme to use, one of light or dark
          * @default dark
         */
        "theme": 'dark' | 'light';
    }
}
declare global {
    interface HTMLSyntaxHighlighterElement extends Components.SyntaxHighlighter, HTMLStencilElement {
    }
    var HTMLSyntaxHighlighterElement: {
        prototype: HTMLSyntaxHighlighterElement;
        new (): HTMLSyntaxHighlighterElement;
    };
    interface HTMLElementTagNameMap {
        "syntax-highlighter": HTMLSyntaxHighlighterElement;
    }
}
declare namespace LocalJSX {
    interface SyntaxHighlighter {
        /**
          * The content to show in the syntax highlighter element
         */
        "content"?: string;
        /**
          * The text inside the "copy to clipboard" button
          * @remark This is primarily for if you want to provide i18n with your syntax highlighted component
          * @example "Kopieer naar klembord"
          * @default "Copy to clipboard"
         */
        "copyButtonLabel"?: string;
        /**
          * The language to highlight for
          * @default html
         */
        "language"?: string;
        /**
          * The theme to use, one of light or dark
          * @default dark
         */
        "theme"?: 'dark' | 'light';
    }
    interface IntrinsicElements {
        "syntax-highlighter": SyntaxHighlighter;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "syntax-highlighter": LocalJSX.SyntaxHighlighter & JSXBase.HTMLAttributes<HTMLSyntaxHighlighterElement>;
        }
    }
}
